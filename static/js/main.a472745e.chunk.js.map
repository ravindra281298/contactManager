{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","name","email","phone","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","a","delete","className","onClick","style","cursor","bind","color","float","to","marginRight","Contacts","Fragment","Header","branding","href","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updContact","match","params","put","user","About","NotFound","src","alt","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a472745e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload),\n            };\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [ action.payload, ...state.contacts],\n            };\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map( contact => \n                    contact.id === action.payload.id ? (contact = action.payload) : contact)\n            };\n        default :\n            return state;\n    }\n}\nexport class Provider extends Component {\n    state = {\n        contacts: [\n            {\n                id: 1,\n                name: \"John Doe\",\n                email: \"jdoe@gmail.com\",\n                phone: \"555-555-5555\"\n            },\n            {\n                id: 2,\n                name: \"Karen Smith\",\n                email: \"karen@gmail.com\",\n                phone: \"333-333-3333\"\n            },\n            {\n                id: 3,\n                name: \"Henry Johnson\",\n                email: \"henry@gmail.com\",\n                phone: \"222-222-2222\"\n            }\n        ],\n        dispatch: action => this.setState( state => \n            reducer(state, action))\n    }\n\n    async componentDidMount() {\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n        this.setState({ contacts: res.data })\n    }\n    render() {\n        return (\n            <Context.Provider value = {this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nimport { Consumer } from '../../context';\nclass Contact extends Component {\n    state= {\n        showContactInfo: false\n    };\n\n    onShowClick = (e) => {\n        this.setState({\n            showContactInfo: !this.state.showContactInfo\n        });\n    }\n\n    onDeleteClick = async(id, dispatch) => {\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n        dispatch({type: 'DELETE_CONTACT', payload: id})\n\n    }\n\n    render() {\n        const {id, name, email, phone} = this.props.contact;\n        const {showContactInfo} = this.state;\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card card-body mb-3\">\n                            <h4>\n                                {name}\n                                <i onClick={this.onShowClick} className=\"fas fa-sort-down\" style={{cursor:'pointer'}}/>\n                                <i onClick={this.onDeleteClick.bind(this, id, dispatch)} className=\"fas fa-times\" style={{ color:'red', float:'right',cursor:'pointer'}}/>\n                                <Link to={`contact/edit/${id}`}>\n                                    <i className=\"fas fa-pencil-alt\"\n                                        style= {{\n                                            cursor:'pointer',\n                                            float:'right',\n                                            color:'black',\n                                            marginRight:'1rem'\n                                        }}\n                                    />\n                                </Link>\n                            </h4>\n                            {showContactInfo ? (<ul className=\"list-group\">\n                                <li className=\"list-group-item\">Email: {email}</li>\n                                <li className=\"list-group-item\">Phone: {phone}</li>\n                            </ul>):null}\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n};\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired,\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport Contact from './Contact';\n\nimport { Consumer } from '../../context';\nclass Contacts extends Component {\n    render() {\n        return (\n            <Consumer>\n                {\n                    value => {\n                        const { contacts } = value;\n                        return (\n                            <React.Fragment>\n                                <h1 className=\"display-4 mb-2\">\n                                    <span className=\"text-danger\">Contact </span>List\n                                </h1>\n                                { contacts.map(contact => (\n                                    <Contact key={contact.id} contact={contact} />\n                                ))}\n                            </React.Fragment>\n                        )\n                    }\n                }\n            </Consumer>\n        )\n    }\n};\n\nexport default Contacts;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n    const { branding } =    props;\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n            <div className=\"container\">\n                <a href=\"/\" className=\"navbar-brand\">\n                    { branding }\n                </a>\n                <div>\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link to=\"/\" className=\"nav-link\">\n                                <i className=\"fas fa-home\"></i>Home\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/contact/add\" className=\"nav-link\">\n                            <i className=\"fas fa-plus\"></i>Add\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/about\" className=\"nav-link\">\n                            <i className=\"fas fa-question\"></i>About\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    )\n};\n\nHeader.defaultProps = {\n    branding: \"My App\"\n};\n\nexport default Header;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nconst TextInputGroup = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n}) =>  {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={ name }>{ label }</label>\n            <input\n                type={ type }\n                name={ name }\n                className={ classnames(\"form-control form-control-lg\", {\n                    \"is-invalid\":error\n                })}\n                placeholder={ placeholder }\n                value = { value }\n                onChange = { onChange }\n            />\n            { error && <div className=\"invalid-feedback\"> {error}</div> }\n        </div>\n    )\n}\n\nTextInputGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string,\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text',\n}\n\nexport default TextInputGroup;\n","import React, { Component } from 'react'\nimport { Consumer } from '../../context'\nimport axios from 'axios'\n// import {v4 as uuid } from 'uuid'   //To generate random ids\nimport TextInputGroup from '../layout/TextInputGroup'\n\n class AddContact extends Component {\n     state = {\n         name: '',\n         email: '',\n         phone: '',\n         errors: {}\n     }\n\n     onChange = (e) => {\n         this.setState({ [e.target.name]:  e.target.value })\n     }\n\n     onSubmit = async(dispatch, e) => {\n         e.preventDefault();\n         \n         const { name, email, phone } = this.state;\n\n         if(name === '') {\n             this.setState({errors: {name: 'Name is required'}})\n             return\n         }\n         if(email === '') {\n            this.setState({errors: {email: 'Email is required'}})\n            return\n        }\n        if(phone === '') {\n            this.setState({errors: {phone: 'Phone is required'}})\n            return\n        }\n\n         const newContact = {\n            //  id: uuid(),\n             name,\n             email,\n             phone\n         }\n\n         const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\n         dispatch({ type: 'ADD_CONTACT', payload: res.data })\n\n         this.setState ({\n             name: '',\n             email: '',\n             phone: '',\n             errors: {}\n         })\n\n         this.props.history.push('/');\n     }\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">\n                                Add Contact\n                            </div>\n                            <div className=\"card-body\">\n                                <form onSubmit = {this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup\n                                        label=\"Name\"\n                                        name=\"name\"\n                                        placeholder=\"Enter Name...\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Email\"\n                                        name=\"email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter Email...\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        placeholder=\"Enter Phone...\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n                                    <input\n                                        type=\"submit\"\n                                        value=\"Add Contact\"\n                                        className=\"btn btn-light btn-block\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default AddContact;","import React, { Component } from 'react'\nimport { Consumer } from '../../context'\nimport axios from 'axios'\n// import {v4 as uuid } from 'uuid'   //To generate random ids\nimport TextInputGroup from '../layout/TextInputGroup'\n\n class EditContact extends Component {\n     state = {\n         name: '',\n         email: '',\n         phone: '',\n         errors: {}\n     }\n\n     async componentDidMount() {\n         const {id} = this.props.match.params;\n\n         const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n         const user = res.data;\n         this.setState({\n             name: user.name,\n             email: user.email,\n             phone:user.phone,\n         })\n     }\n\n     onChange = (e) => {\n         this.setState({ [e.target.name]:  e.target.value })\n     }\n\n     onSubmit = async(dispatch, e) => {\n         e.preventDefault();\n\n         const { name, email, phone } = this.state;\n\n         if(name === '') {\n             this.setState({errors: {name: 'Name is required'}})\n             return\n         }\n         if(email === '') {\n            this.setState({errors: {email: 'Email is required'}})\n            return\n        }\n        if(phone === '') {\n            this.setState({errors: {phone: 'Phone is required'}})\n            return\n        }\n\n        const updContact = {\n            name,\n            email,\n            phone\n        }\n\n        const {id} = this.props.match.params;\n\n        const res = axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data})\n\n        // Clear state\n        this.setState ({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        })\n\n        this.props.history.push('/');\n     }\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">\n                                Edit Contact\n                            </div>\n                            <div className=\"card-body\">\n                                <form onSubmit = {this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup\n                                        label=\"Name\"\n                                        name=\"name\"\n                                        placeholder=\"Enter Name...\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Email\"\n                                        name=\"email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter Email...\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        placeholder=\"Enter Phone...\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n                                    <input\n                                        type=\"submit\"\n                                        value=\"Update Contact\"\n                                        className=\"btn btn-light btn-block\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default EditContact;","import React from 'react'\n\nconst About = (props) => {\n    return (\n        <div>\n            <h1 className=\"display-4\">About Contact Manager</h1>\n            <p className=\"lead\"> Simple App to manage contacts</p>\n            <p className=\"text-secondary\"> Version 1.0.0</p>\n        </div>\n    )\n}\n\nexport default About;","import React from 'react'\n\nconst NotFound = (props) => {\n    return (\n        <div>\n            <img src=\"https://cdncontribute.geeksforgeeks.org/wp-content/uploads/404.png\" alt=\"404 Page Not Found\" />\n        </div>\n    )\n}\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About'\nimport NotFound from './components/pages/NotFound';\nimport { Provider } from './context';\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\"/>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts}/>\n              <Route exact path=\"/about\" component={About}/>\n              <Route exact path=\"/contact/add\" component={AddContact}/>\n              <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n              <Route component={NotFound}/>\n            </Switch>\n          </div>\n        </div>\n        </Router>\n      </Provider>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}